<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net8.0;net9.0;net6.0</TargetFrameworks>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <PackageOutputPath>D:\Nuget</PackageOutputPath>
    <Title>CSharpEssentials.LoggerHelper - Structured Logging Helper for Serilog (Console, Email, DB, PostgreSQL, ElasticSearch)</Title>
    <Authors>Alessandro Chiodo</Authors>
    <Description>
				CSharpEssentials.LoggerHelper is a modular, centralized hub for Serilog sinks that delivers comprehensive observability
				. Its flexible JSON‑based configuration lets you decide which log levels go to which sink—for example, routing only Error messages to email while sending all logs to ElasticSearch—without touching your code
				. The package unifies logs, metrics and traces via OpenTelemetry; every log entry carries a trace_id to correlate distributed requests, and an interactive dashboard lets you visualize traces, sink failures and telemetry, and configure alerts
				. Standard structured fields (e.g., IdTransaction, ApplicationName, MachineName, Action) are included by default, and you can enrich logs with custom properties that propagate across all sinks
				. Each sink—Console, File, MSSQL, PostgreSQL, ElasticSearch, Email, Telegram, xUnit, Telemetry, Dashboard and AI—is delivered as a separate NuGet package, so you install only what you need; the core loads them dynamically and exposes CurrentError and an in‑memory Errors queue to simplify debugging
				. The latest AI integration enables natural‑language queries against logs, trace correlation for root‑cause analysis, anomaly detection and automatic incident summaries
				, while the new xUnit sink captures full traces of failed tests directly in your test output—ideal for debugging flaky tests or disconnected environments
		</Description>
    <Version>4.0.10</Version>
    <AssemblyVersion></AssemblyVersion>
    <FileVersion></FileVersion>
    <PackageReadmeFile>readme.md</PackageReadmeFile>
    <PackageIcon>CSharpEssentials.png</PackageIcon>
    <RepositoryType>git</RepositoryType>
    <PackageTags>serilog, logger, logging, abstraction, csharp, .net, dotnetcore, nlog, log4net, aspnetcore-logging, structured-logging, middleware, loggerhelper, logging-helper, database-logging, postgresql, elasticsearch, email-sink, console-sink</PackageTags>
    <RepositoryUrl>https://github.com/alexbypa/CSharp.Essentials</RepositoryUrl>
    <PackageProjectUrl>https://github.com/alexbypa/CSharp.Essentials</PackageProjectUrl>
    <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
    <PackageRequireLicenseAcceptance>True</PackageRequireLicenseAcceptance>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.Configuration" Version="9.0.1" />
    <PackageReference Include="Microsoft.Extensions.Configuration.Binder" Version="9.0.1" />
    <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="9.0.1" />
    <PackageReference Include="Serilog" Version="4.2.0" />
    <PackageReference Include="Serilog.Settings.Configuration" Version="9.0.0" />
    <PackageReference Include="System.Diagnostics.DiagnosticSource" Version="9.0.4" />
    <FrameworkReference Include="Microsoft.AspNetCore.App" />
  </ItemGroup>
  <ItemGroup>
    <None Include="readme.md" Pack="true" PackagePath="." />
  </ItemGroup>
  <ItemGroup>
    <None Include="LICENSE.txt" Pack="true" PackagePath="" />
  </ItemGroup>
  <ItemGroup>
    <None Include="img\CSharpEssentials.png">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>
</Project>
